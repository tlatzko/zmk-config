/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp SQT        &kp COMMA  &kp PERIOD  &kp P  &kp Y        &kp F           &kp G  &kp C     &kp R  &kp L  &kp BSPC
&kp ESCAPE  &kp A          &kp O      &kp E       &kp U  &kp I        &kp D           &kp H  &kp T     &kp N  &kp S  &kp NON_US_BACKSLASH
&kp LCTRL   &kp SEMICOLON  &kp Q      &kp J       &kp K  &kp X        &kp B           &kp M  &kp W     &kp V  &kp Z  &kp ENTER
                                      &kp LGUI    &to 2  &kp SPACE    &kp LEFT_SHIFT  &to 1  &kp RALT
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT           &kp HASH        &kp DLLR   &kp PRCNT     &kp CARET             &kp AMPS               &kp KP_MULTIPLY  &kp EQUAL         &kp NON_US_BACKSLASH  &trans
&trans  &kp GRAVE        &kp EXCLAMATION  &kp QUESTION    &kp MINUS  &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN    &kp GREATER_THAN  &kp SLASH             &trans
&trans  &kp SEMICOLON    &kp TILDE        &kp UNDERSCORE  &kp EQUAL  &kp PERIOD    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LBRC         &kp RBRC          &to 3                 &trans
                                          &kp LGUI        &to 0      &trans        &trans                &to 2                  &kp RALT
            >;
        };

        numberfield {
            bindings = <
&trans  &kp COMMA  &kp PERIOD  &trans   &kp SLASH  &kp KP_ASTERISK    &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp BACKSPACE  &trans
&trans  &kp F4     &trans      &kp F12  &kp MINUS  &kp PLUS           &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ENTER      &trans
&trans  &kp F1     &kp F2      &kp F3   &kp EQUAL  &kp PERIOD         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &to 3          &trans
                               &trans   &to 0      &trans             &trans        &to 1         &trans
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4                &kp F5                  &kp F7      &kp F8             &kp F10          &kp F11          &kp F12  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F6           &kp F7   &trans
&trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans                &bt BT_CLR              &kp LEFT    &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW  &trans   &trans
                                    &kp LGUI      &mo 0                 &trans                  &trans      &to 1              &kp RALT
            >;
        };
    };
};
